const config = {
    hybrisLocalSetupGuide: [
      {
        textContent1:"This guide is to help you to setup Hybris 2211 in local. It will setup OOTB hybris ecommerce sites.",
        textContent2:`Please note hybris project setup step's may vary when you work on the actual project in a company but the core concepts going to be same.
        The given steps are for MacOS.`,
        textContent3: `
        <b>Steps 1.</b> Download SAP Commerce Cloud Suite 2211<br />
        Download the suite from SAP official site or please ask your employer to provide you the suite
        . SAP commerce cloud is not open source, it is protected with license. <br/>
        <b>Steps 2.</b> Download and install JDK<br />
        Download openJdk from <a href="https://sap.github.io/SapMachine/" target='_blank' rel='noopener noreferrer'>https://sap.github.io/SapMachine/</a>. Please select options as below and click on download button. SAP Commerce cloud 2211 need atleast JDK 17.`,
        textContent4:`You can also use oracle JDK but SAP recommends to use above JDK for better compatibility.
        After installing openJdk please double check the version using command "java -version".<br/>`,
        textContent5:`<b>Steps 3.</b> Unzip the suite and extract all the files to a folder. I have created a new folder "hybris_2211" inside that lets extract the suite. It should have below structure. 
        Please have a closer look at the folder structure, you will notice inside hybris folder only bin folder exists.`,
        textContent6:`<b>Steps 4.</b> Open terminal and navigate to /hybrisroot-folder/installer i.e. /hybris_2211/installer folder and trigger command "./install.sh -r cx setup -A initAdminPassword=nimda". nimda is password, you can change it if you want. Hit enter button and wait for it to complete. Please make sure you do not stop it inbetween. This command will setup the platform.<br/>
        install.sh : It's a command which executes corresponding groovy script to setup the platform.<br/>
        -r : represents recipe<br/>
        cx : is recipe name. ./install.sh -l will give you the list of recipes which hybris provides OOTB.<br/>
        -A : is for additional parameter<br/>
        initAdminPassword : is attribute to set admin password.`,  
        textContent7:'Once it is successful you should see the build successful message in terminal as below.',
        textContent8:`<b>Steps 5.</b> Please execute "./install.sh -r cx initialize -A initAdminPassword=nimda"<br/>
        initialize : initialize the platform<br/>`,
        textContent9 :`On successful initialization you would see success message at terminal as below. Initilization takes time so be patience. For me it took around 2 hours.`,
        textContent10 :`<b>Steps 6.</b> Please execute "./install.sh -r cx start" to start the platform.<br/>`,
        textContent11 :`"INFO: Server startup in 818893 ms". 818893 is time in milliseconds, server took to start. Again time may vary for individual.`,
        textContent12 :`<b>Steps 7.</b> Congratulations!!! Server started successfully.<br/>
        Sites are accessible on below urls:<br/>
        <a href="https://localhost:9002/yacceleratorstorefront/?site=electronics&clear=true" target='_blank' rel='noopener noreferrer'>https://localhost:9002/yacceleratorstorefront/?site=electronics&clear=true</a> <br/>
        <a href="https://localhost:9002/yacceleratorstorefront/?site=apparel-uk&clear=true" target='_blank' rel='noopener noreferrer'>https://localhost:9002/yacceleratorstorefront/?site=apparel-uk&clear=true</a> <br/>
        As a part of recipe installation, Hybris will configure multiple sites. These all sites are mostly production ready. You can visit /hybris_2211/config/local.properties file to check the url of other sites.`,
        textContent13 :`We are done with site setup using recipe, lets see the changes in folder structure.<br/>
        <ul><li>inside /hybris_2211/hybris/ other folders also created e.g. config, data, log etc.</li>
        <li>inside /hybris_2211/hybris/bin/ custom folder is created. Custom folder is very important.</li>
        <li>inside /hybris_2211/hybris/config/local.properties and localextensions.xml files are created.</li></ul>` ,
        textContent14 :`Inside custom folder yacceleratorstorefront is created. yacceleratorstorefront we call this as storefront. A storefront can have multiple sites.
        This storefront is generated by hybris using recipe. Let's create our own storefront. Please stop the server by pressing ctrl+c keys. <br/>
        Delete folder yacceleratorstorefront from custom folder.<br/>
        Open /hybris_2211/hybris/config/localextension.xml with any text editor and remove <extension name='yb2bacceleratorstorefront' /> entry.<br/>
        <b>Steps 8.</b> Open new terminal or navigate to /hybris_2211/hybris/bin/platform/ and trigger command ". ./setantenv.sh"`,
        textContent15 :`<b>Steps 9.</b> Trigger command "ant modulegen" . Please keep an eye on terminal it will
        ask few details in between.`,
        textContent16 :`<b>Steps 10.</b> Please press enter key`,
        textContent17 :`<b>Steps 11.</b> I have passed kshitijtechno. You can write anytext here. Please don't give any spaces. This will be treated as storefront name. You can also press enter key without passing any value, hybris will create default training storefront.`,
        textContent18 :`<b>Steps 12.</b> I have passed org.kshitijtechno. This will be the package name used in the classes. The default package name org.training will be used if you pass empty here.`,
        textContent19 :`<b>Steps 13.</b> On completion of "ant modulegen" command, we should see below instructions in terminal. Please follow on screen instructions carefully.`,
        textContent20 :`I have added generated extensions details in my localextension.xml`,
        textContent21 :`Please remove these extensions from your properties. Otherwise it will give build errors.`,
        textContent22 :`<b>Steps 14.</b> Please run command "ant". It will build the storefront.`,
        textContent23 :`<b>Steps 15.</b> After "ant" successfully executes. Run command "./hybrisserver.sh"<br/>
        If you want to debug the Java code you should run command "./hybrisserver.sh debug"`,
        textContent24 :`Server started successfully!!! You can access new storefront at urls :<br/>
        <a href="https://localhost:9002/kshitijtechnostorefront/?site=electronics&clear=true" target='_blank' rel='noopener noreferrer'>https://localhost:9002/kshitijtechnostorefront/?site=electronics&clear=true</a> <br/>
        <a href="https://localhost:9002/kshitijtechnostorefront/?site=apparel-uk&clear=true" target='_blank' rel='noopener noreferrer'>https://localhost:9002/kshitijtechnostorefront/?site=apparel-uk&clear=true</a> <br/>`,
        textContent25 :`<b>If you face any difficulities during following the guide please drop an email to codingcrust@gmail.com. I will be happy to assist you. Thankyou so much !!!</b>`,
        textContent26 :`Hybris has created new folder inside custom folder called "kshitijtechno" and inside it has created 7 extension to support site functionality. We will modify the custom folder contents during the development.`,
        textContent27 :`<b>Steps 16.</b> You can access HAC (Hybris administration console) at url:<br/>
        <a href="https://localhost:9002/hac" target='_blank' rel='noopener noreferrer'>https://localhost:9002/hac</a> <br/>
        Use username "admin" and password "nimda" to login.`,
        textContent28 :`<b>Steps 17.</b> You can access Backoffice at url:<br/>
        <a href="https://localhost:9002/backoffice/login.zul" target='_blank' rel='noopener noreferrer'>https://localhost:9002/backoffice/login.zul</a> <br/>
        Use username "admin" and password "nimda" to login.`,      
      },
    ],
    hybrisInterviewQA: [
      {
        question: "What is SAP Hybris?",
        answer: "SAP Hybris or later renamed as SAP Commerce cloud is an e-commerce, digital marketing solution. It's owned by SAP.",
      },
      {
        question: "What is current version of SAP Commerce cloud?",
        answer: "Current version is 2211.",
      },
      {
        question: "Is SAP Commerce cloud is free to use?",
        answer: "No its not free. We should have license to use it.",
      },
      {
        question: "How we can learn SAP Commerce cloud development or Hybris development?",
        answer: `To learn the development, nowadays lots of contents are available on Internet. 
        But you can't do hands-on until you have "Hybris Suite". Usually companies who works on the Hybris projects they will purchase the license from SAP
        and will give access of suite to their employees.`,
      },
      {
        question: "What is e-commerce solution?",
        answer: "E-commerce is a platform where end user can place the orders. Customer could be a retail customer, business customer etc.",
      },
      {
        question: "What are the examples of e-commerce solutions?",
        answer: "Amazon, Flipkart, Nayka, Meesho, Taka Cliq are some examples of e-commerce solutions.",
      },
      {
        question: "SAP Commerce cloud is based on what programming language?",
        answer: "It's based on Java programming language. SAP commerce cloud uses Spring framework.",
      },
      {
        question: "SAP Commerce Cloud uses which database?",
        answer: "It uses HSQL database OOTB(Out of the box). It also support different databases like Oracle, MySql etc. We can specify database related configurations inside local.properties file.",
      },
      {
        question: "SAP Commerce Cloud uses which server?",
        answer: "It uses Apache tomcat OOTB.",
      },
      {
        question: "SAP Commerce Cloud uses which search engine?",
        answer: "It uses Apache Solr search engine.",
      },
      {
        question: "What is difference between SAP Hybris and SAP Commerce Cloud?",
        answer: "Both are same. SAP Hybris is renamed as SAP Commerce Cloud.",
      },
      {
        question: "What is items.xml?",
        answer: `items.xml is an xml file. It holds items definition for entire application. Usually it resides inside core extensions resources folder.
        Standard naming convention for the file is *extensionname*-items.xml e.g. core-items.xml. Here "core" is the extension name. Below is the structure of items.xml. In below code I have commented atomic types because it will cause build issue. Given atomictypes are already definded inside platform core-items.xml`,
        code:`        <?xml version="1.0" encoding="ISO-8859-1"?>
        <items xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="items.xsd">
        <!--    <atomictypes>-->
        <!--        <atomictype class="java.lang.Object" autocreate="true" generate="false"/>-->
        <!--        <atomictype class="java.lang.Number" extends="java.lang.Object" autocreate="true" generate="false"/>-->
        <!--        <atomictype class="java.lang.Integer" extends="java.lang.Number" autocreate="true" generate="false"/>-->
        <!--    </atomictypes>-->
            <collectiontypes>
                    <collectiontype code="AddressList" elementtype="StudentAddress" autocreate="true" generate="false" type="list"/>
                    <collectiontype code="SubjectList" elementtype="SubjectsEnum" autocreate="true" generate="false" type="list"/>
                </collectiontypes>
                <enumtypes>
                    <enumtype code="AddressTypeEnum" autocreate="true" generate="true">
                        <value code="Home" />
                        <value code="Office" />
                        <value code="Other" />
                    </enumtype>
                    <enumtype code="SubjectsEnum" autocreate="true" generate="true">
                        <value code="Hindi" />
                        <value code="English" />
                        <value code="Maths" />
                    </enumtype>
                </enumtypes>
                <maptypes>
                    <maptype code="SubjectMap"
                             argumenttype="java.lang.Integer"
                             returntype="SubjectList"
                             autocreate="true"/>
                </maptypes>
                <relations>
                    <relation code="StudentHobies" localized="false">
                        <sourceElement type="Student" qualifier="student" cardinality="one">
                            <modifiers read="true" write="true" search="true" optional="true"/>
                        </sourceElement>
                        <targetElement type="Hobbies" qualifier="hobby" cardinality="many">
                            <modifiers read="true" write="true" search="true" optional="true"/>
                        </targetElement>
                    </relation>
                </relations>
                <itemtypes>
                    <itemtype code="Hobbies" extends="GenericItem">
                        <deployment table="Hobies" typecode="11002"/>
                        <attributes>
                            <attribute qualifier="hobby" type="java.lang.String">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                        </attributes>
                    </itemtype>
        
                    <itemtype code="StudentAddress" extends="Address"  autocreate="true" generate="true">
                        <attributes>
                            <attribute autocreate="true" qualifier="addressType" type="AddressTypeEnum">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                            <attribute autocreate="true" qualifier="houseNumber" type="java.lang.Integer">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                            <attribute autocreate="true" qualifier="pincode" type="java.lang.Integer">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                        </attributes>
                    </itemtype>
        
                    <itemtype code="Student" extends="GenericItem"  autocreate="true" generate="true">
                        <deployment table="Student" typecode="11000"/>
                        <attributes>
                            <attribute autocreate="true" qualifier="studentId" type="java.lang.Integer">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                            <attribute autocreate="true" qualifier="studentName" type="java.lang.String">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                            <attribute autocreate="true" qualifier="studentAddress" type="AddressList">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                            <attribute autocreate="true" qualifier="subjects" type="SubjectMap">
                                <modifiers read="true" write="true" search="true" optional="true"/>
                                <persistence type="property"/>
                            </attribute>
                        </attributes>
                    </itemtype>
                </itemtypes>
        </items>
        `,
      },
      {
        question: "Name the basic tags used in items.xml",
        answer: `atomictypes, collectiontype, enumtypes, maptypes, relations, itemtypes
        <p>"items" is the root tag for items.xml. These tags are fixed and we cannot change the sequence of the tags.          
        To remember the sequence of the tags you can use formula "ACE MRI".  
        XSD(XML schema definition) is items.xsd. Please do check this file for better understanding`,
      },
      {
        question:`What is range of typecode for deployment table tag?`,
        answer:`Range is 1 - 32767. 1 - 10000 are reserved for Hybris. 32700 - 32767 are reserved for 
        extension processing. Rest we can use in development.`
      },
      {
        question: "Explain atomictype.",
        answer: `An AtomicType represent a simple java object. The name ('atomic') means 'non-composed' objects.
        <p>Object, Number, Integer, Boolean, String, Map are the example of atomic type.`,
      },
      {
        question: "What is collectiontypes in Hybris?",
        answer: `In Hybris collection behave same as Java. Collection types are used to store group of Object. These object can be type of premitive like Integers, String or non-primitive like Customer, Student.
        <ul>
        <li>code : It's an identifier for collection.</li>
        <li>elementtype : It tells what kind of objects can be stored in collection. In below code snippet AddressList is collection and StudentAddress is the type of object to store inside collection.</li>
        <li>autocreate : It instructs hybris to create collection inside db during update or initialization.</li>
        <li>generate : Its deprecated have no impact. We can remove it.</li>
        <li>type : type represents collection nature. We can give "list", "set", "collection" to type. List is an ordered List. Set is used to store unique values. collection is used to store collection.</li>
        </ul>`,
        code:`<collectiontypes>
        <collectiontype code="AddressList" elementtype="StudentAddress" autocreate="true" generate="false" type="list" />
        <collectiontype code="SubjectList" elementtype="SubjectsEnum" autocreate="true" generate="false" type="list"/>
    </collectiontypes>`,     
      },
      {
        question: "What is Interceptor in SAP Commerce Cloud?",
        answer: `Interceptors are used to intercept the lifecyle of model in Hybris. For e.g. Before Customer model saves you want to 
        log some information, or may be after deletion of Customer Model you want to update something in the database. For both scenarios you can
        implement different interceptors. So basically the purpose of the interceptor is to make sure correct data is deleted or persisted.<br/>
        SAP Commerce Cloud provides 5 interceptors OOTB. These interceptors are interfaces. These interceptors are available inside de.hybris.platform.servicelayer.interceptor package.
        <li>LoadInterceptor</li>
        <li>InitDefaultsInterceptor</li>
        <li>PrepareInterceptor</li>
        <li>ValidateInterceptor</li>
        <li>RemoveInterceptor</li><br/>
        So to implement the interceptor you have to implement one of above interface.`,
      },
      {
        question :`What is LoadInterceptor?`,
        answer :`The LoadInterceptor is called whenever a model loads from database.
        You may use this interface if you want to change the values of model after load.
        LoadInterceptor have <b>onLoad abstract method</b>.`,
        image:'image1',
      },
      {
        question : `What is InitDefaultsInterceptor?`,
        answer: `The Init Defaults Interceptor is called when a model is filled with its default values. This happens either when it is created via the modelService.create method or when the modelService.initDefaults method is called. You can use this interceptor to fill the model with additional default values, apart from the values defined in the items.xml file.
        This interceptor have <b>onInitDefaults abstract method.</b>`,
      },
      {
        question :`What is PrepareInterceptor?`,
        answer:`The Prepare Interceptor is called before a model is saved to the database before it is validated by Validate interceptor. Do not use this interceptor to perform validation. Use the Validate Interceptor instead.
        Prepare Interceptor have <b>onPrepare abstract method.</b>`,
      },
      {
        question :`What is ValidateInterceptor?`,
        answer:`The Validate Interceptor is called before a model is saved to the database after is been prepared by the Prepare interceptor. You can use Validate Interceptors to validate values of the model. Validate Interceptor have <b>onValidate abstract method.</b>`,
      },
      {
        question :`What is RemoveInterceptor?`,
        answer:`The Remove Interceptor is called before a model is removed from the database. You can use this interceptor, for example:
        To remove models that are related to the model but are not in the model context. Remove Interceptor have <b>onRemove abstract method.</b>`,
      },
      {
        question : `What is Listener?`,
        answer : `Listerns are Java classes in Hybris. Listeners execute when any event orccurs.
        In an application you can have any number of listener. All listeners get notified with same collection of events.
        To create listener your class should implement interface AfterSaveListener.
        <b>afterSave is an abstract method</b>.`,
      },
      {
        question : `What is Cronjob?`,
        answer : `There are three terms with respect to Cronjobs are Job, CronJob and Trigger. Jobs are Java classes it contains the business logic. Cronjob are cron expression. Triggers are used for scheduling purpose.
        So Cronjobs are the tasks which are executed at certain point of time.<br/>
        The default nature for cronjobs are non-abortable. To make job abortable our job should override <b>isAbortable</b> method of AbstractJobPerformable.`,
      },
      {
        question :`What is Impex in Hybris?`,
        answer :`Impex are used to export and import Data into database. Impex usually have kind of data : macro, header, values.
        There are four modes for impex execution are INSERT, UPDATE, INSERT_UPDATE, REMOVE.`
      },
      {
        question : `What is deployment tag?`,
        answer :`deployment tag is child tag for itemtype parent tag. deployment tag is used to define the tables in items.xml. If any item extends 
        GenericItem then deployment properties are mandatory to set for given item.<br/>
        deployment tag has 2 attributes.<br/>
        <ul><li>table : its a table name which gets created in db post update or initialization.</li>
        <li>typecode : typecode is a number which is used by hybris internally to idetify the itemtype uniquely.</li></ul>`,
        code : ` <itemtype code="Student" extends="GenericItem"  autocreate="true" generate="true">
        <deployment table="Student" typecode="11000"/>
        <attributes>
            <attribute autocreate="true" qualifier="studentId" type="java.lang.Integer">
                <modifiers read="true" write="true" search="true" optional="true"/>
                <persistence type="property"/>
            </attribute>
        </attributes>
    </itemtype>`
      }
    ],  
    hybrisProjectImportIntellij : [
      {
        textContent1 : "These instructions are for IntelliJ IDEA 2021.3.2 (Community Edition).",
        textContent2 : `Once you are done with the local setup of SAP Commerce Cloud you 
        should import the project into intellij for development purpose. If you don't know how to do local setup
        you can follow below guide and come back to this post later.`,
        textContent3 :`<b>Steps 1.</b> Download and install intellij from official site <a href="https://www.jetbrains.com/idea/download/?section=mac">Jetbrains</a>. Download the community version only. Ultimate gives 30 days trial post trial you need to pay.<br/>
        On successful installation you will see below screen when you open it first time. Click on plugins.`,
        textContent4 :`<b>Steps 2.</b> Search "sap commerce", from results install 
        "SAP Commerce Developer Toolset". Post plugin installation IDE will ask you to restart. Click on restart IDE.<br/>
        After restart you will see above interface again. `,
        textContent5 : `<b>Steps 3.</b> Click on Projects -> New Project -> select Empty Project ->
        give any project name -> give any project location (here intellij will create workspace. It's not related to hybris) -> click on Finish. After finish it will open new intellij window.`,
        textContent6 : `<b>Steps 4.</b> Click on File -> New -> Project From Existing Sources`,
        textContent7 : `<b>Steps 5.</b> Navigate to your hybris project bin folder and select bin folder click on open button.`,
        textContent8 : `<b>Steps 6.</b> Select import project from external model radio button, select hybris and then click next button.`,
        textContent9 : `<b>Steps 7.</b> Click Next, Next 2 times until you get below screen. Select checkbox highlight with red color rectangle. With this you will be able to see the OOTB source code.`,
        textContent10 : `<b>Steps 8.</b> Select all or leave as is, click next.`,
        textContent11 :`<b>Steps 9.</b> As hybris 2211 need Java 17 mininum. So select Java 17 and click on Finish. If its not present in the list, you can click on "+" icon. Your system should 
        have OpenJdk 17.`,
        textContent12 : `<b>Steps 10.</b> Click New window`,
        textContent13 : `<b>Steps 11.</b> Now wait it will load the project structure. Intellij takes sometime to load all the files. You should wait until intellij index over. Please see red highlight area in below image.`,
        textContent14 :`<b>Steps 12.</b> If you are getting low memory error or intellij is hanged due to low memory. Please increase the heap memory for intellij to work smoothly.`,
        textContent15 :`<b>Steps 13.</b> To increase the heap memory click on lens icon -> search memory -> select Change Memory Settings`,
        textContent16 : `<b>Steps 14.</b> Increase the memory as per your system. I have increased it to 4056 from 1024 MB. Click on Save and restart.`,
        textContent17 : `<b>Steps 15.</b> Project import is completed. In intellij you must see below folder/file structure.`,
      },
    ],
    hybrisDataModeling : [
      {
        textContent1 :`<b>In SAP Commerce Cloud, Data modeling is a way to create model classes, Collections and Relations. Data modeling
        is related to the persistance layer.</b>
        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Let's take an example of basic Java project 
        where we need to store the Student details like id, name, address inside db. 
        If we are using Hibernate, we have to create the pojo class for Student. 
        We have to write id, name, address as member variable of class along with the setters/getters</p>
        <p>But in Hybris we don't need to manually write the classes instead we have to give the details inside items.xml file and build the platform.
        Hybris will automtically generate the Student Model for you.
        So the process of defining the details inside items.xml is called Data modeling.</p>
        Data modeling is a crucial part for Hybris application. Mastering the data modeling is very much needed to work on Hybris.
        Also this is the hot topic for interviewers. Let's deep dive into Data modeling concept's.<br/>
        Below is items.xml for kshitijtechno hybris project.<br/>
        <b>kshitijtechnocore-items.xml</b> is where we have to define our Student itemtype. In Hybris we will call Student model as Student itemtype.<br/>
        items.xml resides inside the coreextension/resources folder of the project. For kshitijtechno, kshitijtechnocore is the core extension.`,
        textContent2 :`We have another core-items.xml inside platform. This is provided by Hybris OOTB to support the electronics and apparel store functionalities.
        During development you should not modify this core-items.xml instead modify which exists inside custom folder. 
        But you can checkout the file for reference purpose and see how SAP has defined items and what are the various available attribute which we can apply to an item.`, 
        textContent3 : `For items.xml schema is defined inside items.xsd.<br/>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The tags used inside items.xml to represent the data are : 
        items, atomictypes, collectiontypes, enumtypes, maptypes, relations, itemtypes.
        The sequence of the tags is fixed. For e.g. collectiontypes can't be defined after relations.
        collectiontypes should be defined after atomictypes and before enumtypes only. To easily remember the sequence you can remember word <b>"ACE MRI"</b>. Here each alphabet represent a tag.
        Also inside each main tag there is immidiate child tag. Keep remember main tag is always in plural and child tag is singular. e.g. collectiontypes is main tag, collectiontype is child tag inside collectiontypes.<br/>
        <b>items.xml is case sensitive.</b><br/>
        <b>items is the root tag for items.xml.</b><br/>
        <b>A</b> - atomictypes : atomictypes are used to represent the simple Java object. The name ('atomic') means 'non-composed' objects. e.g.
        Object, Number, Integer, Boolean, String, Map. All primitive types, wrapper class are kind of atomictype in hybris. In realtime project will rarely define any atomic types. 
        Whatever we need those are already defined by Hybris.
        Below is the code snippet.<br/>`,
        code1 : `<atomictypes>
    <atomictype class="java.lang.Object" autocreate="true" generate="false"/>
    <atomictype class="java.lang.Number" extends="java.lang.Object" autocreate="true" generate="false"/>
    <atomictype class="java.lang.Integer" extends="java.lang.Number" autocreate="true" generate="false"/>
</atomictypes>`,
        textContent4 : `<li>atomictypes : its parent tag.</li>
        <li>atomictype : its child tag.</li>
        <li>class : it's a mandatory attibute. A Java class should be assigned to this attirbute.</li>
        <li>autocreate : If it's true atomictype will be created during initialization. It's optional and default value is true.</li>
        <li>generate : it's deprecated now. Has no effect on the atomictype</li>`,
        textContent5 : '<b>What if we redefined the atomictype again in my custom folders kshitijtechnocore-items.xml?' , 
        textContent6 : `Build will fail. Build will through an java.lang.IllegalArgumentException due to duplicate type code.<p></p>
        <b>C</b> - collectiontypes : its used to define the collection object.`,
      },
    ],
    hybrisQuiz1 : [
      {
        question : "What is hybris?",
        answers : [`Hybris is a programming language`, 
        "Hybris is an ERP tool", "Hybris is JavaScript based library", "Hybris is an e-commrce solution"],
        correctAnswer : "Hybris is an e-commrce solution",
        explaination :`SAP Hybris or later renamed as SAP Commerce cloud is an e-commerce, digital marketing solution. It's owned by SAP.`,
      },
      {
        question : "Who owns Hybris?",
        answers : ["TCS", "SAP", "Tech Mahindra", "Hybris"],
        correctAnswer : "SAP",
      },
      {
        question : "Select which is True.",
        answers : ["Hybris is renamed as SAP Commerce Cloud", "Hybris owned by TCS", "Hybris is a ERP"],
        correctAnswer : "Hybris is renamed as SAP Commerce Cloud",
      },
      {
        question : "SAP Commerce Cloud was invented in which year?",
        answers : ["1997", "1992", "1967", "2002"],
        correctAnswer : "1997",
      },
      {
        question : "What is the full form of HAC?",
        answers : ["Hybris Administration Console", "There is no full form"],
        correctAnswer : "Hybris Administration Console",
      }, 
      {
        question :`What is the range of typecode for deployment table tag?`,
        answers : [1000, 10000, 32767, 31990],
        correctAnswer :32767, 
      },
      {
        question :`How many types are there of interceptors?`,
        answers : [3, 2, 5, 1],
        correctAnswer :5,
        explaination :`There are 5 interceptors : LoadInterceptor, InitDefaultsInterceptor, PrepareInterceptor, ValidateInterceptor, RemoveInterceptor.`,          
      }, 
      {
        question :`Which database Hybris uses OOTB?`,
        answers: ["HSQL", "MySql", "Oracle", "MongoDB"],
        correctAnswer:"HSQL",
        explaination: "Hybris uses HSQL OOTB. Rest other database can also be integrated with Hybris."
      },
      {
        question :`Which web server Hybris uses OOTB?`,
        answers: ["Apache Tomcat", "Weblogic", "Jetty", "Mongoose"],
        correctAnswer:"Apache Tomcat",
        explaination: "Hybris uses Apache Tomcat OOTB to deploy the web application."
      },
      {
        question :`All cronjobs are abortable in Hybris?`,
        answers: ["Yes", "No"],
        correctAnswer:"No",
        explaination: "The default nature for cronjobs are non-abortable. To make job abortable our job should override isAbortable method of AbstractJobPerformable."
      },
      {
        question :`What are the various modes allowed in header of impex?`,
        answers: ["INSERT, INSERT_UPDATE, UPDATE, DELETE", "INSERT, UPDATE, REMOVE, INSERT_UPDATE", "INSERT_UPDATE, UPDATE, REMOVE, PUT", "INSERT_UPDATE, UPDATE, REMOVE"],
        correctAnswer:"INSERT, UPDATE, REMOVE, INSERT_UPDATE",
      },  
    ],
    hybrisLogical : [
      {
        textContent1 :`<b>These are basic java programs which are frequently asked in interviews.<p>Code 1</p></b>`,
        code1 : `
package com.codingcrust;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class ArrayQuest {
    //There is an array write a logic to get the numbers which starts with 1. e.g. [1,3,6,112,64,12,0,3]. Asked in Coforge Java Developer interview.
    public static void quest1(Integer[] arr){
        System.out.println(Arrays.stream(arr).filter(ele -> ele.toString().startsWith("1")).collect(Collectors.toList()));
    }
    //There is an array write a logic to get the unique numbers e.g. [1,1,1,3,6,112,64,12,0,3,112]
    public static void quest2(Integer[] arr){
        System.out.println(Arrays.toString(Arrays.stream(arr).distinct().toArray()));
    }
    //Write logic to get numbers lesser than 64 in an array e.g. [1,1,1,3,6,112,64,12,0,3,112]
    public static void quest3(Integer[] arr){
        System.out.println(Arrays.stream(arr).filter(ele -> (ele < 64)).collect(Collectors.toList()));
    }
    //There is an array write a logic to get the String which starts with K and L. e.g. ["Kshitij","Sunmin","Kruti","Khabar","Liyakat","Anjum","Kareem"]
    public static void quest4(String[] arr){
        System.out.println(Arrays.stream(arr).filter(ele -> ele.startsWith("K") || ele.startsWith("L")).collect(Collectors.toList()));
    }

    //There is an array write a logic to get the numbers max. e.g. [1,3,6,112,64,12,0,3]
    public static void quest5(Integer[] arr){
        System.out.println(Arrays.stream(arr).sorted().collect(Collectors.toList()).get(arr.length-1));
    }

    //There is an array write a logic to get the numbers min. e.g. [1,3,6,112,64,12,0,3]
    public static void quest6(Integer[] arr){
        System.out.println(Arrays.stream(arr).sorted().findFirst().get());
    }

    //There is an array write a logic to remove first character from each String. e.g. ["Kshitij","Sunmin","Kruti","Khabar","Liyakat","Anjum","Kareem"]
    public static void quest7(String[] arr){
        ArrayList<String> list = new ArrayList<>();
        Arrays.stream(arr).forEach(ele -> list.add(ele.substring(1)));
        System.out.println(list);
    }

    //Sort and print in reverse order. e.g. [1,3,6,112,64,12,0,3].
    public static void quest8(Integer[] arr){
        List<Integer> list = Arrays.stream(arr).sorted().collect(Collectors.toList());
        Collections.reverse(list);
        System.out.println(list);
    }

    public static void main(String[] args) {
        System.out.println("Question 1: There is an array write a logic to get the numbers which starts with 1. e.g. [1,1,1,3,6,112,64,12,0,3,112].Asked in Coforge Java Developer interview.");
        quest1(new Integer[]{1,1,1,3,6,112,64,12,0,3,112});

        System.out.println("Question 2: There is an array write a logic to get the unique numbers e.g. [1,1,1,3,6,112,64,12,0,3,112]");
        quest2(new Integer[]{1,1,1,3,6,112,64,12,0,3,112});

        System.out.println("Question 3: Write logic to get numbers lesser than 64 in an array e.g. [1,1,1,3,6,112,64,12,0,3,112]");
        quest3(new Integer[]{1,1,1,3,6,112,64,12,0,3,112});

        System.out.println("Question 4: There is an array write a logic to get the String which starts with K and L. e.g. ["Kshitij","Sunmin","Kruti","Khabar","Liyakat","Anjum","Kareem"]");
        quest4(new String[]{"Kshitij","Sunmin","Kruti","Khabar","Liyakat","Anjum","Kareem"});

        System.out.println("Question 5: There is an array write a logic to get the numbers max. e.g. [1,3,6,112,64,12,0,3]");
        quest5(new Integer[]{1,3,6,112,64,12,0,3});

        System.out.println("Question 6: There is an array write a logic to get the numbers min. e.g. [1,3,6,112,64,12,0,3]");
        quest6(new Integer[]{1,3,6,112,64,12,0,3});

        System.out.println("Question 7: There is an array write a logic to remove first character from each String. e.g. ["Kshitij","Sunmin","Kruti","Khabar","Liyakat","Anjum","Kareem"]");
        quest7(new String[]{"Kshitij", "Sunmin", "Kruti", "Khabar", "Liyakat", "Anjum", "Kareem"});

        System.out.println("Question 8: Sort and print in reverse order. e.g. [1,3,6,112,64,12,0,3]");
        quest8(new Integer[]{1,3,6,112,64,12,0,3});
    }
}
        `,
        textContent2: `<b>Code 2</b>`,
        code2:`package com.codingcrust;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class ReverseArray {
    public static String [] reverseWay1(String [] arr)
    {
        String [] reversed = new String [arr.length];
        int count = 0;
        for (int i = arr.length-1 ; i >= 0 ; i--) {
            reversed[count] = arr[i];
            count++;
        }
        return reversed;
    }
    public static String [] reverseWay2(String [] arr)
    {
        List<String> str = Arrays.asList(arr);
        Collections.reverse(Arrays.asList(arr));
        return (String[]) str.toArray();
    }

    public static void main(String[] args) {
        String[] arr = new String[]{"K","S","H","I","T","I","J"};
        Arrays.stream(reverseWay1(arr)).forEach(System.out::print);
        System.out.println();
        System.out.println("------------");
        Arrays.stream(reverseWay2(arr)).forEach(System.out::print);
    }
}
`,
      },
    ],
  };
  
export default config;